apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: postgresql
parameters:
  - name: APPLICATION_NAME
    description: "The application name"
    value: postgresql
  - name: POSTGRESQL_USER
    description: "Username for PostgreSQL user that will be used for accessing the database."
    value: user
  - name: POSTGRESQL_PASSWORD
    description: "Password for the PostgreSQL connection user."
    value: password
  - name: POSTGRESQL_DATABASE
    description: "Name of PostgreSQL database accessed."
    value: catalog
  - name: MEMORY_LIMIT
    description: "Memory limit for PostgreSQL container."
    value: 512Mi
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    strategy:
      type: Rolling
    template:
      metadata:
        labels:
          app: ${APPLICATION_NAME}
          deploymentconfig: ${APPLICATION_NAME}
      spec:
        containers:
        - env:
          - name: POSTGRESQL_USER
            value: ${POSTGRESQL_USER}
          - name: POSTGRESQL_PASSWORD
            value: ${POSTGRESQL_PASSWORD}
          - name: POSTGRESQL_DATABASE
            value: ${POSTGRESQL_DATABASE}
          image: docker.io/library/postgres:15.3
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
              - pg_isready
              - -U
              - ${POSTGRESQL_USER}
            initialDelaySeconds: 30
            timeoutSeconds: 5
          name: ${APPLICATION_NAME}
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - pg_isready
              - -U
              - ${POSTGRESQL_USER}
            initialDelaySeconds: 5
            timeoutSeconds: 1
          resources:
            limits:
              memory: ${MEMORY_LIMIT}
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
        volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: ${APPLICATION_NAME}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - name: 5432-tcp
      port: 5432
      protocol: TCP
      targetPort: 5432
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${APPLICATION_NAME}
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 10Gi
